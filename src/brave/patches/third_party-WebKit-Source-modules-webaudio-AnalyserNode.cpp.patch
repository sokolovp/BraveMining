diff --git a/third_party/WebKit/Source/modules/webaudio/AnalyserNode.cpp b/third_party/WebKit/Source/modules/webaudio/AnalyserNode.cpp
index afa72785c06dcea6fad29bfedfc71940d60aa7d5..e24795a6361ec0b1f13ece480f7d312347a8e4da 100644
--- a/third_party/WebKit/Source/modules/webaudio/AnalyserNode.cpp
+++ b/third_party/WebKit/Source/modules/webaudio/AnalyserNode.cpp
@@ -26,7 +26,10 @@
 #include "modules/webaudio/AnalyserNode.h"
 #include "bindings/core/v8/ExceptionMessages.h"
 #include "bindings/core/v8/ExceptionState.h"
+#include "brave/renderer/brave_content_settings_observer_helper.h"
+#include "core/dom/Document.h"
 #include "core/dom/ExceptionCode.h"
+#include "core/dom/ExecutionContext.h"
 #include "modules/webaudio/AnalyserOptions.h"
 #include "modules/webaudio/AudioNodeInput.h"
 #include "modules/webaudio/AudioNodeOutput.h"
@@ -264,20 +267,28 @@ double AnalyserNode::smoothingTimeConstant() const {
 }
 
 void AnalyserNode::getFloatFrequencyData(NotShared<DOMFloat32Array> array) {
+  if (!AllowFingerprinting(ToDocument(GetExecutionContext())->GetFrame()))
+    return;
   GetAnalyserHandler().GetFloatFrequencyData(array.View(),
                                              context()->currentTime());
 }
 
 void AnalyserNode::getByteFrequencyData(NotShared<DOMUint8Array> array) {
+  if (!AllowFingerprinting(ToDocument(GetExecutionContext())->GetFrame()))
+    return;
   GetAnalyserHandler().GetByteFrequencyData(array.View(),
                                             context()->currentTime());
 }
 
 void AnalyserNode::getFloatTimeDomainData(NotShared<DOMFloat32Array> array) {
+  if (!AllowFingerprinting(ToDocument(GetExecutionContext())->GetFrame()))
+    return;
   GetAnalyserHandler().GetFloatTimeDomainData(array.View());
 }
 
 void AnalyserNode::getByteTimeDomainData(NotShared<DOMUint8Array> array) {
+  if (!AllowFingerprinting(ToDocument(GetExecutionContext())->GetFrame()))
+    return;
   GetAnalyserHandler().GetByteTimeDomainData(array.View());
 }
 
